(djangoPyeEnv) juanmolina@NB-JMOLINA sql_to_orm_project % 
(djangoPyeEnv) juanmolina@NB-JMOLINA sql_to_orm_project % 
(djangoPyeEnv) juanmolina@NB-JMOLINA sql_to_orm_project % 
(djangoPyeEnv) juanmolina@NB-JMOLINA sql_to_orm_project % python manage.py makemigrations
Migrations for 'sql_to_orm_app':
  sql_to_orm_app/migrations/0002_dojo_ninja.py
    - Create model dojo
    - Create model ninja
(djangoPyeEnv) juanmolina@NB-JMOLINA sql_to_orm_project % 
(djangoPyeEnv) juanmolina@NB-JMOLINA sql_to_orm_project % python manage.py migrate       
Operations to perform:
  Apply all migrations: admin, auth, contenttypes, sessions, sql_to_orm_app
Running migrations:
  Applying sql_to_orm_app.0002_dojo_ninja... OK
(djangoPyeEnv) juanmolina@NB-JMOLINA sql_to_orm_project % 
(djangoPyeEnv) juanmolina@NB-JMOLINA sql_to_orm_project % python manage.py makemigrations
No changes detected
(djangoPyeEnv) juanmolina@NB-JMOLINA sql_to_orm_project % python manage.py makemigrations
Did you rename ninja.dojo_id to ninja.dojo (a ForeignKey)? [y/N] y
Migrations for 'sql_to_orm_app':
  sql_to_orm_app/migrations/0003_auto_20210428_1757.py
    - Rename field dojo_id on ninja to dojo
(djangoPyeEnv) juanmolina@NB-JMOLINA sql_to_orm_project % 
(djangoPyeEnv) juanmolina@NB-JMOLINA sql_to_orm_project % python manage.py migrate       
Operations to perform:
  Apply all migrations: admin, auth, contenttypes, sessions, sql_to_orm_app
Running migrations:
  Applying sql_to_orm_app.0003_auto_20210428_1757... OK
(djangoPyeEnv) juanmolina@NB-JMOLINA sql_to_orm_project % 
(djangoPyeEnv) juanmolina@NB-JMOLINA sql_to_orm_project % python manage.py shell         
Python 3.7.9 (v3.7.9:13c94747c7, Aug 15 2020, 01:31:08) 
[Clang 6.0 (clang-600.0.57)] on darwin
Type "help", "copyright", "credits" or "license" for more information.
(InteractiveConsole)
>>> from sql_to_orm_app import models
>>> new_dojo1 = dojo.objects.create(name='ninja',city='stgo',state='CL')
Traceback (most recent call last):
  File "<console>", line 1, in <module>
NameError: name 'dojo' is not defined
>>> from sql_to_orm_app.models import *
>>> 
>>> new_dojo1 = dojo.objects.create(name='ninja',city='stgo',state='CL')
>>> new_dojo2 = dojo.objects.create(name='sensei',city='peru',state='PE')
>>> new_dojo3 = dojo.objects.create(name='master',city='argentina',state='AR')
>>> 
>>> dojo.objects.all().delete()
(3, {'sql_to_orm_app.ninja': 0, 'sql_to_orm_app.dojo': 3})
>>> 
>>> new_dojo1 = dojo.objects.create(name='ninja',city='stgo',state='CL')
>>> new_dojo2 = dojo.objects.create(name='sensei',city='peru',state='PE')
>>> new_dojo3 = dojo.objects.create(name='master',city='argentina',state='AR')
>>> 
>>> ninja1 = ninja.objects.create(first_name='juan',last_name='molina',dojo=new_dojo1)
>>> ninja2 = ninja.objects.create(first_name='ju',last_name='mo',dojo=new_dojo1)
>>> ninja3 = ninja.objects.create(first_name='jua',last_name='moli',dojo=new_dojo1)
>>> 
>>> ninja4 = ninja.objects.create(first_name='cristobal',last_name='cisternas',dojo=new_dojo2)
>>> ninja5 = ninja.objects.create(first_name='cris',last_name='cist',dojo=new_dojo2)
>>> ninja6 = ninja.objects.create(first_name='cristo',last_name='cister',dojo=new_dojo2)
>>> 
>>> ninja7 = ninja.objects.create(first_name='alejandro',last_name='molina',dojo=new_dojo3)
>>> ninja8 = ninja.objects.create(first_name='ale',last_name='mo',dojo=new_dojo3)
>>> ninja9 = ninja.objects.create(first_name='aleja',last_name='moli',dojo=new_dojo3)
>>> 
>>> 
>>> ninja.objects.filter(dojo=new_dojo1)
<QuerySet [<ninja: ninja object (1)>, <ninja: ninja object (2)>, <ninja: ninja object (3)>]>
>>> ninja.objects.filter(dojo=dojo.objects.get(id=4))
<QuerySet [<ninja: ninja object (1)>, <ninja: ninja object (2)>, <ninja: ninja object (3)>]>
>>> 
>>> ninja.objects.filter(dojo=dojo.objects.last())
<QuerySet [<ninja: ninja object (7)>, <ninja: ninja object (8)>, <ninja: ninja object (9)>]>
>>> 
>>> dojo.objects.last()
<dojo: dojo object (6)>
>>> 
>>> exit()
(djangoPyeEnv) juanmolina@NB-JMOLINA sql_to_orm_project % python manage.py makemigrations
No changes detected
(djangoPyeEnv) juanmolina@NB-JMOLINA sql_to_orm_project % python manage.py makemigrations
You are trying to add a non-nullable field 'desc' to dojo without a default; we can't do that (the database needs something to populate existing rows).
Please select a fix:
 1) Provide a one-off default now (will be set on all existing rows with a null value for this column)
 2) Quit, and let me add a default in models.py
Select an option: 
Please select a valid option: 
Please select a valid option: 2   
(djangoPyeEnv) juanmolina@NB-JMOLINA sql_to_orm_project % python manage.py makemigrations
Migrations for 'sql_to_orm_app':
  sql_to_orm_app/migrations/0004_dojo_desc.py
    - Add field desc to dojo
(djangoPyeEnv) juanmolina@NB-JMOLINA sql_to_orm_project % 
(djangoPyeEnv) juanmolina@NB-JMOLINA sql_to_orm_project % python manage.py migrate       
Operations to perform:
  Apply all migrations: admin, auth, contenttypes, sessions, sql_to_orm_app
Running migrations:
  Applying sql_to_orm_app.0004_dojo_desc... OK
(djangoPyeEnv) juanmolina@NB-JMOLINA sql_to_orm_project % 
(djangoPyeEnv) juanmolina@NB-JMOLINA sql_to_orm_project % python manage.py shell         
Python 3.7.9 (v3.7.9:13c94747c7, Aug 15 2020, 01:31:08) 
[Clang 6.0 (clang-600.0.57)] on darwin
Type "help", "copyright", "credits" or "license" for more information.
(InteractiveConsole)
>>> 
>>> from sql_to_orm_app.models import dojo
>>> 
>>> new_dojo = dojo.objects.create(name='kobra kai',city='reseda',state='valley',desc='no mercy')
Traceback (most recent call last):
  File "/Users/juanmolina/Documents/CodingDojo/Python-Spanish/my_environments/djangoPyeEnv/lib/python3.7/site-packages/django/db/backends/utils.py", line 84, in _execute
    return self.cursor.execute(sql, params)
psycopg2.errors.StringDataRightTruncation: value too long for type character varying(2)


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "<console>", line 1, in <module>
  File "/Users/juanmolina/Documents/CodingDojo/Python-Spanish/my_environments/djangoPyeEnv/lib/python3.7/site-packages/django/db/models/manager.py", line 82, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "/Users/juanmolina/Documents/CodingDojo/Python-Spanish/my_environments/djangoPyeEnv/lib/python3.7/site-packages/django/db/models/query.py", line 422, in create
    obj.save(force_insert=True, using=self.db)
  File "/Users/juanmolina/Documents/CodingDojo/Python-Spanish/my_environments/djangoPyeEnv/lib/python3.7/site-packages/django/db/models/base.py", line 741, in save
    force_update=force_update, update_fields=update_fields)
  File "/Users/juanmolina/Documents/CodingDojo/Python-Spanish/my_environments/djangoPyeEnv/lib/python3.7/site-packages/django/db/models/base.py", line 779, in save_base
    force_update, using, update_fields,
  File "/Users/juanmolina/Documents/CodingDojo/Python-Spanish/my_environments/djangoPyeEnv/lib/python3.7/site-packages/django/db/models/base.py", line 870, in _save_table
    result = self._do_insert(cls._base_manager, using, fields, update_pk, raw)
  File "/Users/juanmolina/Documents/CodingDojo/Python-Spanish/my_environments/djangoPyeEnv/lib/python3.7/site-packages/django/db/models/base.py", line 908, in _do_insert
    using=using, raw=raw)
  File "/Users/juanmolina/Documents/CodingDojo/Python-Spanish/my_environments/djangoPyeEnv/lib/python3.7/site-packages/django/db/models/manager.py", line 82, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "/Users/juanmolina/Documents/CodingDojo/Python-Spanish/my_environments/djangoPyeEnv/lib/python3.7/site-packages/django/db/models/query.py", line 1186, in _insert
    return query.get_compiler(using=using).execute_sql(return_id)
  File "/Users/juanmolina/Documents/CodingDojo/Python-Spanish/my_environments/djangoPyeEnv/lib/python3.7/site-packages/django/db/models/sql/compiler.py", line 1335, in execute_sql
    cursor.execute(sql, params)
  File "/Users/juanmolina/Documents/CodingDojo/Python-Spanish/my_environments/djangoPyeEnv/lib/python3.7/site-packages/django/db/backends/utils.py", line 99, in execute
    return super().execute(sql, params)
  File "/Users/juanmolina/Documents/CodingDojo/Python-Spanish/my_environments/djangoPyeEnv/lib/python3.7/site-packages/django/db/backends/utils.py", line 67, in execute
    return self._execute_with_wrappers(sql, params, many=False, executor=self._execute)
  File "/Users/juanmolina/Documents/CodingDojo/Python-Spanish/my_environments/djangoPyeEnv/lib/python3.7/site-packages/django/db/backends/utils.py", line 76, in _execute_with_wrappers
    return executor(sql, params, many, context)
  File "/Users/juanmolina/Documents/CodingDojo/Python-Spanish/my_environments/djangoPyeEnv/lib/python3.7/site-packages/django/db/backends/utils.py", line 84, in _execute
    return self.cursor.execute(sql, params)
  File "/Users/juanmolina/Documents/CodingDojo/Python-Spanish/my_environments/djangoPyeEnv/lib/python3.7/site-packages/django/db/utils.py", line 89, in __exit__
    raise dj_exc_value.with_traceback(traceback) from exc_value
  File "/Users/juanmolina/Documents/CodingDojo/Python-Spanish/my_environments/djangoPyeEnv/lib/python3.7/site-packages/django/db/backends/utils.py", line 84, in _execute
    return self.cursor.execute(sql, params)
django.db.utils.DataError: value too long for type character varying(2)

>>> 
>>> new_dojo = dojo.objects.create(name='kobra kai',city='reseda',state='KK',desc='no mercy')
>>> 
>>> 